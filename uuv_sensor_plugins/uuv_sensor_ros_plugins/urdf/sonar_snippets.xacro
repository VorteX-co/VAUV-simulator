<?xml version="1.0"?>
<!-- Copyright (c) 2020 The Plankton Authors.
     All rights reserved.

     This source code is derived from UUV Simulator
     (https://github.com/uuvsimulator/uuv_simulator)
     Copyright (c) 2016-2019 The UUV Simulator Authors
     licensed under the Apache license, Version 2.0
     cf. 3rd-party-licenses.txt file in the root directory of this source tree.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="no_collision">
    <collision>
      <geometry>
        <cylinder length="${0.1}" radius="${0.04}" />
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
  </xacro:macro>


  <xacro:macro name="default_sonar_macro" params="namespace parent_link *origin inertial_reference_frame">
    <xacro:sonar_plugin_macro
      namespace="${namespace}"
      parent_link="${parent_link}"
      reference_frame="${inertial_reference_frame}"
      update_rate="15"
      topic="sonar"
      noise_sigma="0.01"
      noise_amplitude="0"
      scale="1.0">
      <xacro:insert_block name="origin" />
    </xacro:sonar_plugin_macro>
  </xacro:macro>


  <xacro:macro name="sonar_beam" params="namespace  pitch yaw update_rate">
    <link name="${namespace}/sonar_beam_link">
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass value="0.001" />  <!-- [kg] -->
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="0.000090623" ixy="0" ixz="0" iyy="0.000090623" iyz="0" izz="0.000091036" />
      </inertial>
      <xacro:no_collision/>
    </link>

    <joint name= "${namespace}/sonar_beam_joint" type="revolute">
      <parent link="${namespace}/sonar_link" />
      <child link="${namespace}/sonar_beam_link" />
      <axis xyz="0 0 1"/>
      <origin xyz="0 0 0.0"/>
      <limit effort="5" lower="-10000000000000000" upper="10000000000000000" velocity="10.0"/>
    </joint>

    <gazebo reference="${namespace}/sonar_beam_link">
      <sensor type="ray" name="sonar_ray">
        <pose>0 0 0 0 0 0</pose>
        <update_rate>${update_rate}</update_rate>
        <visualize>true</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>3</samples>
              <resolution>1</resolution>
              <min_angle>-0.034906585</min_angle>
              <max_angle>0.034906585</max_angle>
            </horizontal>
            <vertical>
              <samples>50</samples>
              <resolution>1</resolution>
              <min_angle>-0.4363</min_angle>
              <max_angle>0.4363</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.75</min>
            <max>50</max>
            <resolution>0.08</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.005</stddev>
          </noise>
        </ray>

        <plugin filename="libgazebo_ros_ray_sensor.so" name="sonar_beam">
          <ros>
            <remapping>~/out:=${topic}/range</remapping>
          </ros>
          <!-- <gaussianNoise>0.005</gaussianNoise> -->
          <alwaysOn>true</alwaysOn>
          <!-- <updateRate>${update_rate}</updateRate> -->
          <!-- <topicName>${topic}_sonar${index}</topicName> -->
          <frame_name>${namespace}/sonar_link</frame_name>

          <!-- TODO Check for fov -->
          <!-- <fov>0.06</fov> -->
          <radiation_type>ultrasound</radiation_type>

          <!-- Set output to sensor_msgs/Range to get same output type as gazebo_ros_range -->
          <output_type>sensor_msgs/Range</output_type>
        </plugin>

        <plugin filename="libgazebo_ros_ray_sensor.so" name="sonar_PointCloud2">
          <ros>
            <remapping>~/out:=${topic}/PointCloud2</remapping>
          </ros>
          <!-- <gaussianNoise>0.005</gaussianNoise> -->
          <alwaysOn>true</alwaysOn>
          <!-- <updateRate>${update_rate}</updateRate> -->
          <!-- <topicName>${topic}_sonar${index}</topicName> -->
          <frame_name>${namespace}/sonar_link</frame_name>

          <!-- TODO Check for fov -->
          <!-- <fov>0.06</fov> -->
          <radiation_type>ultrasound</radiation_type>

          <!-- Set output to sensor_msgs/Range to get same output type as gazebo_ros_range -->
          <output_type>sensor_msgs/PointCloud2</output_type>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>

  <xacro:macro name="sonar_plugin_macro"
    params="namespace  parent_link topic scale *origin update_rate
    reference_frame noise_sigma noise_amplitude">
    <link name="${namespace}/sonar_link">
      <pose>0 0 0.0 0 0 0</pose>
      <inertial>
        <mass value="0.51" />  <!-- [kg] -->
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="0.00055" ixy="0" ixz="0" iyy="0.00055" iyz="0" izz="0.00170" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="file://$(find uuv_sensor_ros_plugins)/meshes/pingsonar.dae" scale="${scale} ${scale} ${scale}"/>
        </geometry>
      </visual>
      <xacro:no_collision/>
    </link>

    <joint name="${namespace}/sonar_joint" type="revolute">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/sonar_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
      <axis xyz="1 0 0"/>
    </joint>

    <xacro:sonar_beam
      namespace="${namespace}"
      pitch="0.0" yaw="0.0" update_rate="${update_rate}">
    </xacro:sonar_beam>
    <gazebo>
      <plugin filename="libuuv_gazebo_ros_sonar_plugin.so" name="libuuv_gazebo_ros_sonar_plugin">
        <!-- <updateRate>${update_rate}</updateRate> -->
        <!-- <topicName>${topic}_sonar${index}</topicName> -->
        <velocity>10.0</velocity>
        <!-- <robot_namespace>${namespace}</robot_namespace> -->
        <link_name>${namespace}/sonar_link</link_name> <!-- (string, required): name of the body which holds the IMU sensor -->
        <sensor_topic>${topic}</sensor_topic> <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
        <update_rate>${update_rate}</update_rate> <!-- Update period of accelerometer and gyroscope [s] -->

        <enable_gazebo_messages>false</enable_gazebo_messages>
      </plugin>
    </gazebo>

  </xacro:macro>
</robot>
